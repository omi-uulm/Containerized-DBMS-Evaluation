# Required environment variables:
# $EVALUATION_RUN -> number of the current evaluation run
# $WORKLOAD -> the used workload: load/workloadb
# $INFLUXDB_URL -> http://IP:PORT of the influxdb
# $INFLUX_USER
# $INFLUX_PASSWORD

# Telegraf Configuration
#
# This Configuration is used for the installation with MongoDB
# additionaly you can uncoment the Monitoring Configuration for
# Docker
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics
# this config will generate

# global tags
[global_tags]
    app = "mongodb"
    resource = "vm"
    run = "$EVALUATION_RUN"
    workload = "$WORKLOAD"


# configure telegraf agent
[agent]
    ## Default data collection intervall for all inputs
    interval = "10s"
    round_interval = true
    metric_batch_size = 1000
    metric_buffer_limit = 100000
    collection_jitter = "0s"
    flush_jitter = "0s"
    ## run telegraf with debug log messages
    debug = false
    ## run telegraf in quite mode
    quiet = false
    ## specify log file name (empty => stderr)
    # logfile = ""

    ## Override default hostname, if empty use defualt os.Hostname
    hostname = ""
    omit_hostname = false

######################################################################
#                      OUTPUT PLUGINS                                #
######################################################################

# configuration for influxdb server to send metrics to
[[outputs.influxdb]]
    ## full HTTP or UDP endpoint URL to your influxdb instance
    urls = ["$INFLUXDB_URL"] # required
    ## target database for metrics (telegraf will create one if not exists)
    database = "telegraf"
    precision = "s"
    # if empty rp is default
    retention_policy = ""
    ## write consistency (cluster only) options: "any", "one", "quorum", "all"
    write_consistency = "any"
    timeout = "5s" # 0 not recommended

    ## auth
    username = "$INFLUX_USER"
    password = "$INFLUX_PASSWORD"
    ## set user agent for HTTP POSTs (can be useful for log differentiation)
    # user_agent = "telegraf"
    ## set UDP payload (default 512 bytes)
    # udp_payload = 512

######################################################################
#                      INTPUT PLUGINS                                #
######################################################################

# metrics about CPU usage
[[inputs.cpu]]
  ## Whether to report per-cpu stats or not
  percpu = true
  ## Whether to report total system cpu stats or not
  totalcpu = true
  ## If true, collect raw CPU time metrics.
  collect_cpu_time = false
  ## If true, compute and report the sum of all non-idle CPU states.
  report_active = false


# metrics about DISK usage by mount point
[[inputs.disk]]
    ## by defualt telegraf will gather metrics for all devices including partitions
    ## maybe you want to set it to specific
    # devices = ["sda", "sdb"]
    ## uncomment if you want disk serial numbers
    # skip_serial_number = false

    ## Ignore some mountpoints by filesystem type. e.g. (dev)tmpfs
    ignore_fs = ["tmpfs", "devtmpfs"]

# metrics about disk IO by device
[[inputs.diskio]]
    ## by defualt telegraf will gather metrics for all devices including partitions
    ## maybe you want to set it to specific
    # devices = ["sda", "sdb"]
    ## uncomment if you want disk serial numbers
    # skip_serial_number = false

# metrics from /proc/stat
[[inputs.kernel]]
    # no configuration

# metris for MEMORY usage
[[inputs.mem]]
    # no configuration

# Get the number of processes and group them by status
[[inputs.processes]]
  # no configuration

# Read metrics about swap memory usage
[[inputs.swap]]
  # no configuration

# Read metrics about system load & uptime
[[inputs.system]]
  # no configuration

 # Read metrics about network interface usage
 [[inputs.net]]
   ## By default, telegraf gathers stats from any up interface (excluding loopback)
   ## Setting interfaces will tell it to gather these explicit interfaces,
   ## regardless of status.
   ##
   # interfaces = ["eth0"]

# Read TCP metrics such as established, time wait and sockets counts.
[[inputs.netstat]]
    # no configuration


# metrics from one or more mongoDB servers
[[inputs.mongodb]]
#    ## An array of URI to gather stats about. Specify an ip or hostname
#    ## with optional port add password. ie,
#    ##   mongodb://user:auth_key@10.10.3.30:27017,
#    ##   mongodb://10.10.3.33:18832,
#    ##   10.0.0.1:10000, etc.
   servers = ["mongodb://127.0.0.1:27017"]
#    ## uncomment this for one single measurement
#    # gather_perdb_stats = false


# # Read metrics about docker containers
# [[inputs.docker]]
#   ## Docker Endpoint
#   ##   To use TCP, set endpoint = "tcp://[ip]:[port]"
#   ##   To use environment variables (ie, docker-machine), set endpoint = "ENV"
#   endpoint = "unix:///var/run/docker.sock"
#   ## Only collect metrics for these containers, collect all if empty
#   container_names = []
#   ## Timeout for docker list, info, and stats commands
#   timeout = "5s"
#
#   ## Whether to report for each container per-device blkio (8:0, 8:1...) and
#   ## network (eth0, eth1, ...) stats or not
#   perdevice = true
#   ## Whether to report for each container total blkio and network stats or not
#   total = false


# Read per-node and per-bucket metrics from Couchbase
#[[inputs.couchbase]]
#  ## specify servers via a url matching:
#  ##  [protocol://][:password]@address[:port]
#  ##  e.g.
#  ##    http://couchbase-0.example.com/
#  ##    http://admin:secret@couchbase-0.example.com:8091/
#  ##
#  ## If no servers are specified, then localhost is used as the host.
#  ## If no protocol is specifed, HTTP is used.
#  ## If no port is specified, 8091 is used.
#  servers = ["http://127.0.0.1:8091"]
